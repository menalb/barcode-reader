@page "/book/{BookId}"
@inject HttpClient Http
@using BookBarcodeReader.Client.Components
@using BookBarcodeReader.Shared.Book

@if (_isDoing)
{
    <em>loading...</em>
}
else
{
    <section>
        <h3>Book @book.Title</h3>
        <div>Title: @book.Title</div>
        <div>SubTitle: @book.SubTitle</div>

        <BookFormComponent BookModel="model" SubmitBook="(book)=>Submit(book)"></BookFormComponent>
    </section>
}
@code {
    [Parameter]
    public string BookId { get; set; } = "";

    public BookEntity book { get; set; } = new BookEntity();

    private Boolean _isDoing = false;

    private EditBookModel? model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _isDoing = true;
        book = await Http.GetFromJsonAsync<BookEntity>($"books/" + BookId) ?? new();

        model = new EditBookModel(book);

        _isDoing = false;
    }

    private async Task Submit(BookModel bookModel)
    {
        var bookToUpdate = new UpdateBookRequest
            {
                Id = book.Id,
                Authors = bookModel.Authors,
                Categories = bookModel.Categories,
                Description = bookModel.Description,
                Identifiers = bookModel.Identifiers,
                Images = bookModel.Images,
                ISBN = bookModel.ISBN,
                Language = bookModel.Language,
                Link = bookModel.Link,
                PublishedDate = bookModel.PublishedDate,
                Publisher = bookModel.PublishedDate,
                SubTitle = bookModel.SubTitle,
                Title = bookModel.Title
            };

        _isDoing = true;
        var response = await Http.PutAsJsonAsync<UpdateBookRequest>("book", bookToUpdate);
        _isDoing = false;
    }
}
