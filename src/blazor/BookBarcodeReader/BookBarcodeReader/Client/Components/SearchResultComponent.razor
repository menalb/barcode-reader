@using BookBarcodeReader.Shared
@using BookBarcodeReader.Shared.Book
<ul class="list-group">

    @if (searchResult != null)
        @foreach (var result in searchResult)
        {
            <li @onclick="()=>Select(result)" class="@ItemCss(result)">
                <h4>
                    Title: @result.Title
                </h4>

                <div>
                    <span>
                        Language: <b> @result.Language </b>
                    </span>
                    <span>

                        Published Date: @result.PublishedDate
                    </span>
                </div>
                <div>
                    Identifiers: @FormatIdentifiers(result.Identifiers)
                </div>
                <div>
                    @if (result.Images != null)
                    {
                        <img src="@result.Images.SmallThumbnail" />
                    }
                    else
                    {
                        <em>No Image</em>
                    }
                </div>
                <div>
                    Description: @result.Description
                </div>

            </li>

        }

</ul>

@code {
    [Parameter]
    public BarcodeLookupResult[] searchResult { get; set; }

    [Parameter]
    public EventCallback<BarcodeLookupResult> selectItem { get; set; }


    private BarcodeLookupResult selected { get; set; }

    private string FormatIdentifiers(IEnumerable<BookIdentifier> identifiers)
    {
        if (identifiers != null)
        {
            return identifiers.Select(identifier => $"{identifier.Type}: {identifier.Value}").Aggregate((a, b) => $"{a}, {b}");
        }
        return string.Empty;
    }

    private string ItemCss(BarcodeLookupResult item)
    {
        var css = "list-group-item";
        return (selected != null && item.Id == selected.Id) ? css + " active" : css;
    }

    private void Select(BarcodeLookupResult result)
    {
        selected = result;
        selectItem.InvokeAsync(selected);
    }
}
